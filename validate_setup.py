"""
Simple validation script for advanced dependencies
"""

def test_dependencies():
    """Test if all advanced dependencies are working"""
    
    print("üî¨ Advanced Lithography Hotspot Detection - Dependency Check")
    print("=" * 60)
    
    # Test basic imports
    try:
        import torch
        print(f"‚úÖ PyTorch {torch.__version__}")
        print(f"   CUDA available: {torch.cuda.is_available()}")
        print(f"   Device: {torch.device('cuda' if torch.cuda.is_available() else 'cpu')}")
    except ImportError:
        print("‚ùå PyTorch not available")
    
    try:
        import torchvision
        print(f"‚úÖ TorchVision {torchvision.__version__}")
    except ImportError:
        print("‚ùå TorchVision not available")
    
    try:
        import transformers
        print(f"‚úÖ Transformers {transformers.__version__}")
    except ImportError:
        print("‚ùå Transformers not available")
    
    try:
        import cv2
        print(f"‚úÖ OpenCV {cv2.__version__}")
    except ImportError:
        print("‚ùå OpenCV not available")
    
    try:
        import sklearn
        print(f"‚úÖ Scikit-learn {sklearn.__version__}")
    except ImportError:
        print("‚ùå Scikit-learn not available")
    
    try:
        import streamlit
        print(f"‚úÖ Streamlit {streamlit.__version__}")
    except ImportError:
        print("‚ùå Streamlit not available")
    
    print("\n" + "=" * 60)
    
    # Test advanced modules
    print("üß™ Testing Advanced Modules:")
    
    try:
        from config_advanced import MODEL_CONFIG
        print("‚úÖ config_advanced.py - OK")
    except Exception as e:
        print(f"‚ùå config_advanced.py - Error: {e}")
    
    try:
        from cyclegan_advanced import get_cyclegan_processor
        processor = get_cyclegan_processor()
        print("‚úÖ cyclegan_advanced.py - OK")
    except Exception as e:
        print(f"‚ùå cyclegan_advanced.py - Error: {e}")
    
    try:
        from classifier_advanced import get_hotspot_classifier
        classifier = get_hotspot_classifier()
        print("‚úÖ classifier_advanced.py - OK")
    except Exception as e:
        print(f"‚ùå classifier_advanced.py - Error: {e}")
    
    try:
        from gradcam_advanced import get_gradcam_visualizer
        visualizer = get_gradcam_visualizer()
        print("‚úÖ gradcam_advanced.py - OK")
    except Exception as e:
        print(f"‚ùå gradcam_advanced.py - Error: {e}")
    
    try:
        from image_processing_advanced import get_image_processor
        processor = get_image_processor()
        print("‚úÖ image_processing_advanced.py - OK")
    except Exception as e:
        print(f"‚ùå image_processing_advanced.py - Error: {e}")
    
    print("\n" + "=" * 60)
    print("üöÄ Status: Advanced dependencies are ready!")
    print("You can now run the advanced application with full functionality.")
    print("\nTo start the app:")
    print("1. Run: launcher.bat (choose option 1 for Advanced App)")
    print("2. Or run: start_app.bat")
    print("3. Or run: streamlit run app_advanced.py")

if __name__ == "__main__":
    test_dependencies()
